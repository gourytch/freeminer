imagebuild -- новый конструстор растровых изображений в FreeMiner
=================================================================


Введение
--------
Данный документ описывает принципы работы и инструментария для построения 
новых текстурных изображений из существующих путём их комбинации и наложений.
В отличие от уже существующих '['-инструментов ("[verticalframe", "[lowpart",
"[combine") он обладает большей гибкостью и разнообразием.

В основе построения текстуры лежит концепция стола и именованных полок:
на стол может быть загружена (или создана) текстура, корая может 
трансформироваться, быть скопирована на полку с именем и также на которую 
сверху могут накладываться (как целиком, так и частично) другие 
именованные текстуры.


Описание
--------

-- BNF-Формат строки, описывающей программу построения изображения:

ПРОГРАММА ::= "[imagebuild " + СПИСОК_КОМАНД

СПИСОК_КОМАНД ::= "" | КОМАНДА | КОМАНДА + ">" + СПИСОК_КОМАНД

КОМАНДА ::= NEW | LOAD | RESIZE | SCALE | CROP | STORE | RESTORE | 
            APPLY | BITBLT

-- описание для дальнейшего использования в командах

ШИРИНА | ВЫСОТА ::= целое > 0

КООРДИНАТА_X | КООРДИНАТА_Y | X_ИСТОЧНИК | Y_ИСТОЧНИК ::= целое

КИ_ШИРИНЫ | КИ_ВЫСОТЫ ::= число с плавающей точкой > 0

ЦВЕТ ::= GRAY | RGB | ARGB

GRAY ::= HEX1 | HEX2
примеры: 0 F 8 00 CD FF

RGB ::= HEX1 + HEX1 + HEX1 | HEX2 + HEX2 + HEX2
примеры: 000 FFF FC4 F3A8C0 004400 440044

ARGB ::= HEX1 + HEX1 + HEX1 + HEX1 | HEX2 + HEX2 + HEX2 + HEX2
примеры: 0000 FFFF СFC4 AAF3A8C0 FF004400 FF440044

HEX1 ::= 0..9A..Fa..f

HEX2 ::= HEX1 + HEX1




команды
-------

NEW ::= "new " + ШИРИНА + "," + ВЫСОТА + "," + ЦВЕТ
-- создаёт на столе новую текстуру с заданными размерами,
-- заполненную заданным цветом

LOAD ::= "load " + ИМЯ_ФАЙЛА
-- загружает на стол текстуру из файла изображения.
-- файл должен находиться в каталоге textures 


RESIZE ::= ( "resize " | "fit " ) + ШИРИНА + "," + ВЫСОТА
-- изменяет размеры изображения растягивая или сжимая его до нужного размера


SCALE ::= "scale " + КИ_ШИРИНЫ + "," + КИ_ВЫСОТЫ
-- изменяет размеры изображения растягивая или сжимая его
-- относительного исходного размера

CROP ::= "crop " + КООРДИНАТА_X + "," + КООРДИНАТА_Y + "," + 
                   ШИРИНА + "," + ВЫСОТА
-- вырезает фрагмент изображения.


STORE ::= ( "store " | "memorize " ) + ИМЯ
-- сохраняет текущее изображение в поименованном локальном буфере.

RESTORE ::= ( "restore " | "remember " ) + ИМЯ
-- извлекает изображение из поименованного локального буфера.

APPLY ::= "apply " + ИМЯ + "," + 
                     КООРДИНАТА_X + "," + КООРДИНАТА_Y
-- накладывает изображение из поименованного локального буфера на текущее


BITBLT ::= "bitblt " + ИМЯ + "," + 
                       КООРДИНАТА_X + "," + КООРДИНАТА_Y + "," + 
                       X_ИСТОЧНИК + "," + Y_ИСТОЧНИК + "," + 
                       ШИРИНА + "," + ВЫСОТА
-- накладывает часть изображения из поименованного локального буфера
-- на текущее изображение

Примеры использования
---------------------

-- белая текстура 64x64
[imagebuild new 64,64,F

-- красный квадрат с зеленой рамочкой 64x64
[imagebuild new 62,62,F00>store Red>new 64,64,00F>apply Red,1,1

-- картинка из файла, размноженная 2x2 и помещённая в текстуру 640x480
[imagebuild load mypicture.png > fit 320,240 > store img > 
  new 64,64,0 > 
  apply img,0,0 > apply img,32,0 >
  apply img 0,32 > apply img 32,32

-- кусок картинки из файла
[imagebuild load pic1.png > crop 10,20,64,64
